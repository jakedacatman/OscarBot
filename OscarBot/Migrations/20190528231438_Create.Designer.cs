// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OscarBot.Classes;

namespace OscarBot.Migrations
{
    [DbContext(typeof(EntityContext))]
    [Migration("20190528231438_Create")]
    partial class Create
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("OscarBot.Classes.ApiKey", b =>
                {
                    b.Property<string>("Service")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Key");

                    b.HasKey("Service");

                    b.ToTable("ApiKeys");
                });

            modelBuilder.Entity("OscarBot.Classes.GuildQueue", b =>
                {
                    b.Property<ulong>("GuildId")
                        .ValueGeneratedOnAdd();

                    b.HasKey("GuildId");

                    b.ToTable("Queues");
                });

            modelBuilder.Entity("OscarBot.Classes.ModerationAction", b =>
                {
                    b.Property<ulong>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<ulong>("GuildId");

                    b.Property<ulong>("ModeratorId");

                    b.Property<string>("Reason");

                    b.Property<DateTime>("ReverseAfter");

                    b.Property<DateTime>("Timestamp");

                    b.Property<int>("Type");

                    b.HasKey("UserId");

                    b.HasIndex("GuildId");

                    b.ToTable("ModerationAction");
                });

            modelBuilder.Entity("OscarBot.Classes.ModerationActionCollection", b =>
                {
                    b.Property<ulong>("GuildId")
                        .ValueGeneratedOnAdd();

                    b.HasKey("GuildId");

                    b.ToTable("ModerationActions");
                });

            modelBuilder.Entity("OscarBot.Classes.Prefix", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("GuildPrefix");

                    b.HasKey("Id");

                    b.ToTable("Prefixes");
                });

            modelBuilder.Entity("OscarBot.Classes.Skip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<ulong?>("GuildQueueGuildId");

                    b.Property<string>("SongUrl");

                    b.Property<ulong>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("GuildQueueGuildId");

                    b.ToTable("Skip");
                });

            modelBuilder.Entity("OscarBot.Classes.Song", b =>
                {
                    b.Property<ulong>("GuildId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author");

                    b.Property<ulong>("ChannelId");

                    b.Property<ulong?>("GuildQueueGuildId");

                    b.Property<string>("Length");

                    b.Property<string>("Name");

                    b.Property<ulong>("QueuerId");

                    b.Property<string>("Thumbnail");

                    b.Property<string>("URL");

                    b.HasKey("GuildId");

                    b.HasIndex("GuildQueueGuildId");

                    b.ToTable("Song");
                });

            modelBuilder.Entity("OscarBot.Classes.ModerationAction", b =>
                {
                    b.HasOne("OscarBot.Classes.ModerationActionCollection")
                        .WithMany("Actions")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OscarBot.Classes.Skip", b =>
                {
                    b.HasOne("OscarBot.Classes.GuildQueue")
                        .WithMany("Skipped")
                        .HasForeignKey("GuildQueueGuildId");
                });

            modelBuilder.Entity("OscarBot.Classes.Song", b =>
                {
                    b.HasOne("OscarBot.Classes.GuildQueue")
                        .WithMany("Queue")
                        .HasForeignKey("GuildQueueGuildId");
                });
#pragma warning restore 612, 618
        }
    }
}
